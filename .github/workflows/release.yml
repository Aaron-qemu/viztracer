name: Python package build and publish

on:
  release:
    types: [created]

jobs:
  deploy-wheels:
    name: Deploy wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [37, 38, 39, 310]
        manylinux-image: [manylinux2010, manylinux2014, manylinux_2_24]
        exclude:
          # manyliunx image is not a valid variation on MacOS and Windows
          - os: macos-latest
            manylinux-image: manylinux2010
          - os: windows-latest
            manylinux-image: manylinux2010
          - os: macos-latest
            manylinux-image: manylinux2014
          - os: windows-latest
            manylinux-image: manylinux2014

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine flake8 setuptools wheel

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel -U

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: 'cp${{ matrix.python-version }}-*'
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux-image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux-image }}

      - name: Publish wheels to PyPI Unix
        if: matrix.os != 'windows-latest' 
        continue-on-error: true
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload wheelhouse/*.whl

      - name: Publish wheels to PyPI Windows
        if: matrix.os == 'windows-latest' 
        continue-on-error: true
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload (Get-ChildItem wheelhouse/*.whl)

  deploy-tar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine flake8 setuptools wheel
      - name: Build source tar
        run: |
          python setup.py sdist
      - name: Publish wheels to PyPI
        continue-on-error: true
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*tar*
